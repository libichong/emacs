#+OPTIONS: toc:nil ^:nil author:nil date:nil html-postamble:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css" />
#+TITLE: emacs 笔记

* Emacs
** Dired
  You can mark several files individually using m or mark all files whose names match a search string by using % m string <RET>. Use U to unmark all files.
  The strings used for matching are regular expressions, so are very powerful. For example:
#+BEGIN_EXAMPLE
% m test <RET> will mark all files with names containing the string “test” (equivalent to *test* on the command line.
% m ^test <RET> will mark all files with names starting with the string “test” (equivalent to test* on the command line).
% m txt$ <RET> will mark all files with names ending with the string “txt” (equivalent to *txt on the command line).
% m ^test.*org$ <RET> will mark all files with names starting with the string “test” and ending with “org” (equivalent to test*org on the command line).
% m [kxj] <RET> will mark all files with names containing the letters k, x, or j
% m [kxj] <RET> will mark all files with names containing the letters k, x, or j
% m [6-9] <RET> will mark all files with names containing the digits 6,7,8,9
#+END_EXAMPLE

#+BEGIN_EXAMPLE
So, supposing you wanted to delete a bunch of files, but wanted to see them first to visually check you are deleting the right ones, you might do the followingo
mark the files manually, or using a regular expression
1. * t invert the selection
2. k hide the selected files so now you see the ones you originally selected for deletion so you can check you got the right ones
3. * s to select those visible files
4. D to delete them
#+END_EXAMPLE

#+BEGIN_EXAMPLE
1. C-M-f runs forward-sexp, move forward over a balanced expression that can be a pair or a symbol.
2. C-M-b runs backward-sexp, move backward over a balanced expression that can be a pair or a symbol.
3. C-M-k runs kill-sexp, kill balanced expression forward that can be a pair or a symbol.
4. C-M-<SPC> or C-M-@ runs mark-sexp, put mark after following expression that can be a pair or a symbol.
5. C-M-a runs beginning-of-defun, which moves point to beginning of a function.
6. C-M-e runs end-of-defun, which moves point to end of a function.
7. C-M-h runs mark-defun, which put a region around whole current or following function.
#+END_EXAMPLE

#+BEGIN_EXAMPLE
- GTAGS: definition database
- GRTAGS: reference database
- GPATH: path name database
#+END_EXAMPLE