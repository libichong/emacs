#+OPTIONS: toc:nil ^:nil author:nil date:nil html-postamble:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css" />
#+TITLE: NO-SQL 笔记

NO SQL Database
| Rdis(3.2)                                                            | MongoDB (3.2)                                                                 |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Written in: C                                                        | Written in: C++                                                               |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Main point: Blazing fast                                             | Main point: JSON document store                                               |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| License: BSD                                                         | License: AGPL (Drivers: Apache)                                               |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Protocol: Telnet-like, binary safe                                   | Protocol: Custom, binary (BSON)                                               |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Disk-backed in-memory database                                       | Master/slave replication (auto failover with replica sets)                    |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Master-slave replication, automatic failover                         | Sharding built-in                                                             |
|                                                                      |                                                                               |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Simple values or data structures by keys                             | Queries are javascript expressions                                            |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| but complex operations like ZREVRANGEBYSCORE.                        | Run arbitrary javascript functions server-side                                |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| INCR & co (good for rate limiting or statistics)                     | Geospatial queries                                                            |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Bit and bitfield operations (for example to implement bloom filters) | Multiple storage engines with different performance characteristics           |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Has sets (also union/diff/inter)                                     | Performance over features                                                     |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Has lists (also a queue; blocking pop)                               | Document validation                                                           |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Has hashes (objects of multiple fields)                              | Journaling                                                                    |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Sorted sets (high score table, good for range queries)               | Powerful aggregation framework                                                |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Lua scripting capabilities                                           | On 32bit systems, limited to ~2.5Gb                                           |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Has transactions                                                     | Text search integrated                                                        |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Values can be set to expire (as in a cache)                          | GridFS to store big data + metadata (not actually an FS)                      |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Pub/Sub lets you implement messaging                                 | Has geospatial indexing                                                       |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| GEO API to query by radius (!)                                       | Data center aware                                                             |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
| Best used: For rapidly changing data with a foreseeable database     | If you need dynamic queries. If you prefer to define indexes, not             |
| size (should fit mostly in memory). For example: To store            | map/reduce functions. If you need good performance on a big DB. If you wanted |
| real-time stock prices. Real-time analytics. Leaderboards. Real-time | CouchDB, but your data changes too much, filling up disks.                    |
| communication. And wherever you used memcached before.               |                                                                               |
|----------------------------------------------------------------------+-------------------------------------------------------------------------------|
|                                                                      |                                                                               |


| Cassandra (2.0)                                                                                  | ElasticSearch (0.20.1)                                                            |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Written in: Java                                                                                 | Written in: Java                                                                  |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Main point: Store huge datasets in "almost" SQL                                                  | Main point: Advanced Search                                                       |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| License: Apache                                                                                  | License: Apache                                                                   |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Protocol: CQL3 & Thrift                                                                          | Protocol: JSON over HTTP (Plugins: Thrift, memcached)                             |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| CQL3 is very similar to SQL, but with some limitations(no JOINs, no aggregate functions.)        | Stores JSON documents                                                             |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| CQL3 is now the official interface. Don't look at Thrift, unless you're working on a legacy app. | Has versioning                                                                    |
| This way, you can live without understanding ColumnFamilies, SuperColumns, etc.                  |                                                                                   |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Querying by key, or key range (secondary indices are also available)                             | Parent and children documents                                                     |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Tunable trade-offs for distribution and replication (N, R, W)                                    | Documents can time out                                                            |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Data can have expiration (set on INSERT).                                                        | Very versatile and sophisticated querying, scriptable                             |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Writes can be much faster than reads (when reads are disk-bound)                                 | Write consistency: one, quorum or all                                             |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Map/reduce possible with Apache Hadoop                                                           | Sorting by score (!)                                                              |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| All nodes are similar, as opposed to Hadoop/HBase                                                | Geo distance sorting                                                              |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Very good and reliable cross-datacenter replication                                              | Fuzzy searches (approximate date, etc) (!)                                        |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Distributed counter datatype.                                                                    | Asynchronous replication                                                          |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| You can write triggers in Java.                                                                  | Atomic, scripted updates (good for counters, etc)                                 |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| When you need to store data so huge that it doesn't fit on server, but want an interface to it.  | Can maintain automatic "stats groups" (good for debugging)                        |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|
| Web analytics, to count hits by hour, by browser, by IP, etc. Transaction logging.               | When you have objects with (flexible) fields, and you need                        |
| Data collection from huge sensor arrays.                                                         | "advanced search" functionality.                                                  |
|                                                                                                  | A dating service that handles age difference, geographic location,                |
|                                                                                                  | tastes and dislikes, etc. Or a leaderboard system that depends on many variables. |
|--------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------|

*** Classic document and BigTable stores
| CouchDB (V1.2)                                                     | HBase (V0.92.0)                                                 |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Written in: Erlang                                                 | Written in: Java                                                |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Main point: DB consistency, ease of use                            | Main point: Billions of rows X millions of columns              |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Protocol: HTTP/REST                                                | Protocol: HTTP/REST (also Thrift)                               |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Bi-directional (!) replication,                                    | Modeled after Google's BigTable                                 |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| continuous or ad-hoc                                               | Uses Hadoop's HDFS as storage                                   |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| with conflict detection,                                           | Map/reduce with Hadoop                                          |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| thus, master-master replication. (!)                               | Query predicate push down via server side scan and get filters  |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| MVCC - write operations do not block reads                         | Optimizations for real time queries                             |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Previous versions of documents are available                       | A high performance Thrift gateway                               |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Crash-only (reliable) design                                       | HTTP supports XML, Protobuf, and binary                         |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Views: embedded map/reduce                                         | Jruby-based (JIRB) shell                                        |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Server-side document validation possible                           | Rolling restart for configuration changes and minor upgrades    |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Authentication possible                                            | Random access performance is like MySQL                         |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Real-time updates via '_changes' (!)                               | A cluster consists of several different types of nodes          |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| Attachment handling                                                |                                                                 |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| thus, CouchApps (standalone js apps)                               |                                                                 |
|--------------------------------------------------------------------+-----------------------------------------------------------------|
| For accumulating, occasionally changing data, on which pre-defined | Hadoop is probably still the best way to run Map/Reduce jobs on |
| queries are to be run. Places where versioning is important.       | huge datasets. Best if you use the Hadoop/HDFS stack already.   |
|                                                                    |                                                                 |
|--------------------------------------------------------------------+-----------------------------------------------------------------|

|--------------------------------------------------------+--------------------------------------------------------------------|
| Accumulo (1.4)                                         | Hypertable (0.9.6.5)                                               |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Written in: Java and C++                               | Written in: C++                                                    |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Main point: A BigTable with Cell-level security        | Main point: A faster, smaller HBase                                |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Protocol: Thrift                                       | Protocol: Thrift, C++ library, or HQL shell                        |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Another BigTable clone, also runs of top of Hadoop     | Implements Google's BigTable design                                |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Originally from the NSA                                | Run on Hadoop's HDFS                                               |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Cell-level security                                    | Uses its own, "SQL-like" language, HQL                             |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Bigger rows than memory are allowed                    | Can search by key, by cell, or for values in column families.      |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Keeps a memory map outside Java, in C++ STL            | Search can be limited to key/column ranges.                        |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Map/reduce using Hadoop's facitlities (ZooKeeper & co) | Sponsored by Baidu                                                 |
|--------------------------------------------------------+--------------------------------------------------------------------|
| Some server-side programming                           | Retains the last N historical values                               |
|--------------------------------------------------------+--------------------------------------------------------------------|
|                                                        | Tables are in namespaces                                           |
|--------------------------------------------------------+--------------------------------------------------------------------|
|                                                        | Map/reduce with Hadoop                                             |
|--------------------------------------------------------+--------------------------------------------------------------------|
| If you need to restict access on the cell level.       | Same as HBase, since it's basically a replacement: Search engines. |
|                                                        | Analysing log data. Any place where scanning huge, two-dimensional |
|                                                        | join-less tables are a requirement.                                |
|--------------------------------------------------------+--------------------------------------------------------------------|

*** Graph databases
| OrientDB (2.0)                                                                                                   | Neo4j (V1.5M02)                                                                                                      |
|------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------|
| Written in: Java                                                                                                 | Written in: Java                                                                                                     |
|                                                                                                                  | Main point: Graph database - connected data                                                                          |
| Main point: Document-based graph database                                                                        | License: GPL, some features AGPL/commercial                                                                          |
| License: Apache 2.0                                                                                              | Protocol: HTTP/REST (or embedding in Java)                                                                           |
| Protocol: binary, HTTP REST/JSON, or Java API for embedding                                                      | Standalone, or embeddable into Java applications                                                                     |
| Has transactions, full ACID conformity                                                                           | Full ACID conformity (including durable data)                                                                        |
| Can be used both as a document and as a graph database (vertices with properties)                                | Both nodes and relationships can have metadata                                                                       |
| Both nodes and relationships can have metadata                                                                   | Integrated pattern-matching-based query language ("Cypher")                                                          |
| Multi-master architecture                                                                                        | Also the "Gremlin" graph traversal language can be used                                                              |
| Supports relationships between documents via persistent pointers (LINK, LINKSET, LINKMAP, LINKLIST field types)  | Indexing of nodes and relationships                                                                                  |
| SQL-like query language (Note: no JOIN, but there are pointers)                                                  | Nice self-contained web admin                                                                                        |
| Web-based GUI (quite good-looking, self-contained)                                                               | Advanced path-finding with multiple algorithms                                                                       |
| Inheritance between classes. Indexing of nodes and relationships                                                 | Indexing of keys and relationships                                                                                   |
| User functions in SQL or JavaScript                                                                              | Optimized for reads                                                                                                  |
| Sharding                                                                                                         | Has transactions (in the Java API)                                                                                   |
| Advanced path-finding with multiple algorithms and Gremlin traversal language                                    | Scriptable in Groovy                                                                                                 |
| Advanced monitoring, online backups are commercially licensed                                                    | Clustering, replication, caching, online backup, advanced monitoring and High Availability are commercially licensed |
| Best used: For graph-style, rich or complex, interconnected data.                                                | Best used: For graph-style, rich or complex, interconnected data.                                                    |
| For example: For searching routes in social relations, public transport links, road maps, or network topologies. | For example: For searching routes in social relations, public transport links, road maps, or network topologies.     |
|------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------|